/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsDate,
  IsString,
  IsNumber,
  IsOptional,
  ValidateNested,
  IsInt,
} from "class-validator";
import { Type } from "class-transformer";
import { Product } from "../../product/base/Product";
import { Supplier } from "../../supplier/base/Supplier";
import { Supply } from "../../supply/base/Supply";
import { SupplyTrack } from "../../supplyTrack/base/SupplyTrack";
@ObjectType()
class ProductSupply {
  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  price!: number | null;

  @ApiProperty({
    required: false,
    type: () => Product,
  })
  @ValidateNested()
  @Type(() => Product)
  @IsOptional()
  product?: Product | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  productCount!: number | null;

  @ApiProperty({
    required: false,
    type: () => Supplier,
  })
  @ValidateNested()
  @Type(() => Supplier)
  @IsOptional()
  supplier?: Supplier | null;

  @ApiProperty({
    required: false,
    type: () => Supply,
  })
  @ValidateNested()
  @Type(() => Supply)
  @IsOptional()
  supply?: Supply | null;

  @ApiProperty({
    required: false,
    type: () => [SupplyTrack],
  })
  @ValidateNested()
  @Type(() => SupplyTrack)
  @IsOptional()
  supplyTracks?: Array<SupplyTrack>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}
export { ProductSupply };
