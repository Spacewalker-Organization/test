/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsDate,
  IsString,
  IsInt,
  IsOptional,
  ValidateNested,
  IsNumber,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { Jobsite } from "../../jobsite/base/Jobsite";
import { Order } from "../../order/base/Order";
import { OrderTrack } from "../../orderTrack/base/OrderTrack";
import { Product } from "../../product/base/Product";
import { EnumProductOrderSourcedFrom } from "./EnumProductOrderSourcedFrom";
import { Supplier } from "../../supplier/base/Supplier";
import { Warehouse } from "../../warehouse/base/Warehouse";
@ObjectType()
class ProductOrder {
  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  itemCount!: number | null;

  @ApiProperty({
    required: false,
    type: () => Jobsite,
  })
  @ValidateNested()
  @Type(() => Jobsite)
  @IsOptional()
  jobsite?: Jobsite | null;

  @ApiProperty({
    required: false,
    type: () => Order,
  })
  @ValidateNested()
  @Type(() => Order)
  @IsOptional()
  order?: Order | null;

  @ApiProperty({
    required: false,
    type: () => [OrderTrack],
  })
  @ValidateNested()
  @Type(() => OrderTrack)
  @IsOptional()
  orderTracks?: Array<OrderTrack>;

  @ApiProperty({
    required: false,
    type: () => Product,
  })
  @ValidateNested()
  @Type(() => Product)
  @IsOptional()
  product?: Product | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  rentPrice!: number | null;

  @ApiProperty({
    required: false,
    enum: EnumProductOrderSourcedFrom,
  })
  @IsEnum(EnumProductOrderSourcedFrom)
  @IsOptional()
  @Field(() => EnumProductOrderSourcedFrom, {
    nullable: true,
  })
  sourcedFrom?: "Supplier" | "Jobsite" | "Warehouse" | null;

  @ApiProperty({
    required: false,
    type: () => Supplier,
  })
  @ValidateNested()
  @Type(() => Supplier)
  @IsOptional()
  supplier?: Supplier | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: () => Warehouse,
  })
  @ValidateNested()
  @Type(() => Warehouse)
  @IsOptional()
  warehouse?: Warehouse | null;
}
export { ProductOrder };
